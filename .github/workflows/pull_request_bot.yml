name: 🤖 PR Comment Bot

on:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  validar-template:
    runs-on: ubuntu-latest
    steps:
      - name: Verificar conteúdo do PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = context.payload.pull_request.body || "";
            const title = context.payload.pull_request.title || "";

            // Ignora PRs relacionados ao próprio bot
            if (title.toLowerCase().includes("pull_request_bot")) {
              console.log("⏭️ PR ignorado por título.");
              return;
            }

            const obrigatorios = [
              "- [x] O código funciona localmente sem erros",
              "- [x] A branch está atualizada com develop",
              "- [x] O PR foi atribuído a pelo menos 1 revisor"
            ];

            const secoesObrigatorias = [
              "## 📋 Checklist do PR",
              "## 📄 Descrição",
              "## 📷 Screenshots (se aplicável)",
              "## ⏰ Referência (Notion, tarefa, issue, etc.)"
            ];

            let erros = [];

            // Aceita frases curtas e comuns como válidas
            const aceitaveis = [
              "não se aplica",
              "sem screenshots",
              "sem referência",
              "nenhuma referência",
              "não necessário"
            ];

            // Verifica se cada seção existe e tem conteúdo relevante
            secoesObrigatorias.forEach(secao => {
              const regex = new RegExp(`${secao}\\s*\\n+([\\s\\S]*?)(?=\\n##|$)`, 'i');
              const match = body.match(regex);
              const conteudo = match && match[1] ? match[1].trim() : "";

              if (!conteudo || aceitaveis.includes(conteudo.toLowerCase()) || conteudo.startsWith("---")) {
                erros.push(`❌ A seção "${secao}" está vazia ou com conteúdo irrelevante.`);
              }
            });

            // Verifica se os checkboxes obrigatórios estão marcados (tolerante a variações)
            obrigatorios.forEach(item => {
              const baseTexto = item.replace("- [x]", "").trim().toLowerCase();
              const regex = new RegExp(`- \\[x\\] .*${baseTexto}.*`, "i");
              if (!regex.test(body)) {
                erros.push(`❌ Checklist obrigatório não marcado corretamente: "${item}"`);
              }
            });

            if (erros.length > 0) {
              core.setFailed(erros.join("\n"));
            } else {
              console.log("✅ Template validado com sucesso.");
            }
